import { IsNotEmpty, IsString, IsNumber, IsEnum, IsOptional, IsDateString, Min, Max, ValidateIf, IsEmail } from 'class-validator';
import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import { Type } from 'class-transformer';
import { PaymentMethod } from 'src/core/domain/enums/payment-method-enum';

export class CreateChargeDto {
  @ApiProperty({
    description: 'ID do cliente que receber√° a cobran√ßa',
    example: 'clq3r4s5t6u7v8w9x0y1z2'
  })
  @IsNotEmpty({ message: 'ID do usu√°rio √© obrigat√≥rio' })
  @IsString({ message: 'ID do usu√°rio deve ser uma string' })
  userId: string;

  @ApiProperty({
    description: 'Valor da cobran√ßa em reais',
    example: 150.99,
    minimum: 0.01
  })
  @IsNotEmpty({ message: 'Valor √© obrigat√≥rio' })
  @IsNumber({ maxDecimalPlaces: 2 }, { message: 'Valor deve ser um n√∫mero com no m√°ximo 2 casas decimais' })
  @Min(0.01, { message: 'Valor deve ser maior que zero' })
  @Type(() => Number)
  amount: number;

  @ApiPropertyOptional({
    description: 'Moeda da cobran√ßa',
    example: 'BRL',
    default: 'BRL'
  })
  @IsOptional()
  @IsString({ message: 'Moeda deve ser uma string' })
  currency?: string;

  @ApiProperty({
    description: 'M√©todo de pagamento',
    enum: PaymentMethod,
    example: PaymentMethod.PIX
  })
  @IsNotEmpty({ message: 'M√©todo de pagamento √© obrigat√≥rio' })
  @IsEnum(PaymentMethod, { message: 'M√©todo de pagamento deve ser PIX, CREDIT_CARD ou BANK_SLIP' })
  method: PaymentMethod;

  @ApiPropertyOptional({
    description: 'Descri√ß√£o da cobran√ßa',
    example: 'Pagamento de assinatura mensal'
  })
  @IsOptional()
  @IsString({ message: 'Descri√ß√£o deve ser uma string' })
  description?: string;

  // üîë Dados espec√≠ficos para PIX
  @ApiPropertyOptional({
    description: 'Chave PIX (obrigat√≥rio para pagamento PIX)',
    example: 'user@email.com'
  })
  @ValidateIf(o => o.method === PaymentMethod.PIX)
  @IsNotEmpty({ message: 'Chave PIX √© obrigat√≥ria para pagamento via PIX' })
  @IsString({ message: 'Chave PIX deve ser uma string' })
  pixKey?: string;

  @ApiPropertyOptional({
    description: 'N√∫mero do cart√£o (obrigat√≥rio para cart√£o de cr√©dito)',
    example: '1234567890123456'
  })
  @ValidateIf(o => o.method === PaymentMethod.CREDIT_CARD)
  @IsNotEmpty({ message: 'N√∫mero do cart√£o √© obrigat√≥rio para pagamento com cart√£o' })
  @IsString({ message: 'N√∫mero do cart√£o deve ser uma string' })
  cardNumber?: string;

  @ApiPropertyOptional({
    description: 'Nome do portador do cart√£o (obrigat√≥rio para cart√£o de cr√©dito)',
    example: 'Jo√£o Silva'
  })
  @ValidateIf(o => o.method === PaymentMethod.CREDIT_CARD)
  @IsNotEmpty({ message: 'Nome do portador √© obrigat√≥rio para pagamento com cart√£o' })
  @IsString({ message: 'Nome do portador deve ser uma string' })
  cardHolderName?: string;

  @ApiPropertyOptional({
    description: 'N√∫mero de parcelas (1-12, obrigat√≥rio para cart√£o de cr√©dito)',
    example: 3,
    minimum: 1,
    maximum: 12
  })
  @ValidateIf(o => o.method === PaymentMethod.CREDIT_CARD)
  @IsNotEmpty({ message: 'N√∫mero de parcelas √© obrigat√≥rio para pagamento com cart√£o' })
  @IsNumber({}, { message: 'Parcelas deve ser um n√∫mero' })
  @Min(1, { message: 'N√∫mero de parcelas deve ser no m√≠nimo 1' })
  @Max(12, { message: 'N√∫mero de parcelas deve ser no m√°ximo 12' })
  @Type(() => Number)
  installments?: number;

  @ApiPropertyOptional({
    description: 'Data de vencimento do boleto (obrigat√≥rio para boleto) - formato ISO 8601',
    example: '2025-11-15T23:59:59.000Z'
  })
  @ValidateIf(o => o.method === PaymentMethod.BANK_SLIP)
  @IsNotEmpty({ message: 'Data de vencimento √© obrigat√≥ria para boleto banc√°rio' })
  @IsDateString({}, { message: 'Data de vencimento deve estar no formato ISO 8601' })
  dueDate?: string;
}


export class CreatePixChargeDto {
  @ApiProperty({ description: 'ID do cliente', example: 'clq3r4s5t6u7v8w9x0y1z2' })
  customerId: string;

  @ApiProperty({ description: 'Valor da cobran√ßa', example: 150.99 })
  amount: number;

  @ApiProperty({ description: 'Chave PIX', example: 'user@email.com' })
  pixKey: string;

  @ApiPropertyOptional({ description: 'Descri√ß√£o', example: 'Pagamento PIX' })
  description?: string;
}

export class CreateCreditCardChargeDto {
  @ApiProperty({ description: 'ID do cliente', example: 'clq3r4s5t6u7v8w9x0y1z2' })
  customerId: string;

  @ApiProperty({ description: 'Valor da cobran√ßa', example: 299.90 })
  amount: number;

  @ApiProperty({ description: 'N√∫mero do cart√£o', example: '1234567890123456' })
  cardNumber: string;

  @ApiProperty({ description: 'Nome do portador', example: 'Jo√£o Silva' })
  cardHolderName: string;

  @ApiProperty({ description: 'N√∫mero de parcelas (1-12)', example: 3 })
  installments: number;

  @ApiPropertyOptional({ description: 'Descri√ß√£o', example: 'Pagamento parcelado' })
  description?: string;
}

export class CreateBankSlipChargeDto {
  @ApiProperty({ description: 'ID do cliente', example: 'clq3r4s5t6u7v8w9x0y1z2' })
  customerId: string;

  @ApiProperty({ description: 'Valor da cobran√ßa', example: 450.00 })
  amount: number;

  @ApiProperty({ description: 'Data de vencimento', example: '2025-11-15T23:59:59.000Z' })
  dueDate: string;

  @ApiPropertyOptional({ description: 'Descri√ß√£o', example: 'Boleto banc√°rio' })
  description?: string;
}